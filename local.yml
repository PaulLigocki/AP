---
- hosts: localhost
  connection: local
  become: true  
  vars:
    real_wlan0_mac: "b8:27:eb:ff:ff:ff" #/etc/udev/rules.d/70-persistent-net.rules
    virtual_ap0_mac: "b8:27:eb:ff:ff:f" #/etc/udev/rules.d/70-persistent-net.rules
    virtual_ap0_ip: "192.168.99.254" 
    virtual_ap_bssid_mac: "b8:27:eb:ff:ff:00"
    dnsmasq_dhcp_server: "192.168.99.254" #/etc/dnsmasq.conf
    dnsmasq_dhcp_range: "192.168.99.1,192.168.99.250,12h" #/etc/dnsmasq.conf
    hostapd_conf_ssid: "WirelessWiFiAp"
    hostapd_conf_wpa_passphrase: "TopSecretPassword"
    hostapd_conf_bssid: "0c:af:eb:00:11:22"
    wpa_supplicant_conf_ssid: "wifissid" #/etc/wpasupplicant/wpa_supplicant.conf
    wpa_supplicant_conf_psk: "WiFiPasswordPassPhrase" #/etc/wpasupplicant/wpa_supplicant.conf
    wpa_supplicant_conf_id_str: "home" #/etc/wpasupplicant/wpa_supplicant.conf & #/etc/network/interfaces
    ap0_ip_address: "192.168.99.254" #/etc/network/interfaces
    ap0_ip_netmask: "255.255.255.0" #/etc/network/interfaces    
    dhcp_clients: #dnsmasq static cliensts
      - mac: "b8:27:eb:ff:ff:01"
        ip: "192.168.99.1"
        name: client1
      - mac: "b8:27:eb:ff:ff:02"
        ip: "192.168.99.2"
        name: client2
    wpa_supplicant_conf_networks:
      - ssid: "home-wifi"
        psk: "abc123"
        id_str: "home"
        priority: '1'
      - ssid: "phone-wifi"
        psk: "abc123"
        id_str: "phone"
        priority: '2'

  tasks:

  #Vars included from this file will take precedance over what is declared above=12(play vars) include_vars=18
  #https://docs.ansible.com/ansible/latest/user_guide/playbooks_variables.html#understanding-variable-precedence

  - name: Include vars file
    tags: safe,vars
    include_vars:
      file: /home/pi/vars.yml

  - name: Display all variables/facts known for a host
    tags: safe,vars
    debug:
      var: vars
    

  # - name: Display all variables/facts known for a host
  #   tags: debug
  #   debug:
  #     msg: "ssid {{ item.ssid }}"
  #   with_items:
  #     - "{{ wpa_supplicant_conf_networks }}"

  #Step 0.0
  - name: setup wifi client wpa_supplicant etc
    tags: safe,wifi-client,optional,wpa_supplicant
    import_tasks: wifi-client.yml

  #Installing UFW so that can disable its ipv6 rules
  - name: install packages
    tags: safe,ufw
    package:
      name: "{{ item }}"
      state: latest
    with_items:
      - ufw

  - name: Allow everything and disable UFW
    tags: safe,firewall,ufw
    ufw:
      state: disabled

  - name: disable ipv6
    tags: safe,optional,disable_ipv6
    import_tasks: ipv6.yml
  
  - name: disable bluetooth
    tags: safe,optional,disable_bluetooth
    import_tasks: bluetooth.yml  

#Step 1.0 Create ap0 Interfce 
  - name: Creating ap0 interface | Template a file to /etc/udev/rules.d/70-persistent-net.rules
    tags: safe,udev_rules
    template:
      src: templates/70-persistent-net.rules.j2
      dest: /etc/udev/rules.d/70-persistent-net.rules
      owner: root
      group: root
      mode: u=rw,g=r,o=r

#Step 1.1 Setup dnsmasq DHCP & DNS Server
  - name: setup dnsmasq
    tags: safe, dnsmasq
    import_tasks: dnsmasq.yml

#Step 1.2 setup hostapd

  - name: Setup AccessPoint | Install hostapd package
    tags: safe,hostapd
    package:
      name: "{{ item }}"
      state: latest
    with_items:
      - hostapd

  - name: Setup AccessPoint | Template a file to /etc/hostapd/hostapd.conf
    tags: safe,hostapd
    template:
      src: templates/hostapd.conf.j2
      dest: /etc/hostapd/hostapd.conf
      owner: root
      group: root
      mode: u=rw,g=r,o=r  

#BROKEN
#Step 1.3 Setup IP Addresses
  - name: Template a file to /etc/network/interfaces
    tags: test,interfaces,unsafe
    template:
      src: templates/interfaces.j2
      dest: /etc/network/interfaces
      owner: root
      group: root
      mode: u=rw,g=r,o=r

#Step 1.4.a Deploy Fix Script
  - name: Template a file to /usr/local/bin/fix-ap-wifi.sh
    tags: safe,fix_script
    template:
      src: templates/fix-ap-wifi.sh.j2
      dest: /usr/local/bin/fix-ap-wifi.sh
      owner: root
      group: root
      mode: u=rwx,g=rx,o=rx
  
#Step 1.4.b Deploy Fix Script Cron Job   
  - name: "Create a Cron entry @reboot /usr/local/bin/fix-ap-wifi.sh"
    tags: safe,fix_script
    cron:
      name: "Run Fix Script After Reboots"
      special_time: reboot
      job: "/usr/local/bin/fix-ap-wifi.sh"
      user: root
      state: present









# - name: copy dnsmasq.conf
#   tags: test
#   copy:
#     src: files/dnsmasq.conf
#     dest: /etc/dnsmasq.conf
#     owner: root
#     group: root  

# - name: copy hostapd.conf
#   tags: test
#   copy:
#     src: files/hostapd.conf
#     dest: /etc/hostapd/hostapd.conf
#     owner: root
#     group: root
# - name: copy 70-persistent-net.rules
#   tags: ap
#   copy:
#     src: files/70-persistent-net.rules
#     dest: /etc/udev/rules.d/70-persistent-net.rules
#     owner: root
#     group: root